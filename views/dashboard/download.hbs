<div class="container-fluid py-4">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1">
                        <i class="fas fa-download text-primary me-2"></i>
                        Download TikTok Videos
                    </h1>
                    <p class="text-muted mb-0">
                        Download single videos or process bulk downloads with CSV files
                    </p>
                </div>
                <div>
                    <button class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#helpModal">
                        <i class="fas fa-question-circle me-1"></i>
                        Help
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- API Configuration Warning -->
    <div id="apiWarning" class="row mb-4 d-none">
        <div class="col">
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <div class="d-flex align-items-start">
                    <i class="fas fa-exclamation-triangle fa-2x me-3 mt-1"></i>
                    <div>
                        <h6 class="alert-heading">Demo Mode Active</h6>
                        <p class="mb-2">
                            TikTok API is not configured. The application is running in demo mode with sample data.
                        </p>
                        <small class="text-muted">
                            To enable real downloads, configure your RapidAPI key in the .env file.
                        </small>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Single Download -->
        <div class="col-lg-6 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-video me-2"></i>
                        Single Video Download
                    </h5>
                </div>
                <div class="card-body">
                    <form id="singleDownloadForm">
                        <div class="mb-3">
                            <label for="videoUrl" class="form-label">TikTok Video URL</label>
                            <div class="input-group">
                                <input 
                                    type="url" 
                                    class="form-control" 
                                    id="videoUrl" 
                                    name="url" 
                                    placeholder="https://www.tiktok.com/@username/video/123456789"
                                    required
                                >
                                <button class="btn btn-outline-secondary" type="button" id="pasteBtn">
                                    <i class="fas fa-paste"></i>
                                </button>
                            </div>
                            <div class="form-text">
                                Paste any TikTok video URL here. Supports all TikTok URL formats.
                            </div>
                            <div class="invalid-feedback"></div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-download me-2"></i>
                                Download Video
                            </button>
                        </div>
                    </form>

                    <!-- Single Download Result -->
                    <div id="singleResult" class="mt-4 d-none">
                        <hr>
                        <h6 class="fw-bold">Download Ready</h6>
                        <div id="singleVideoCard"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bulk Download -->
        <div class="col-lg-6 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-layer-group me-2"></i>
                        Bulk Video Download
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <label class="form-label mb-0">Upload CSV File</label>
                            <a href="/api/download/template" class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-download me-1"></i>
                                Download Template
                            </a>
                        </div>
                        
                        <div class="upload-area" id="uploadArea">
                            <div class="upload-content">
                                <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                                <p class="mb-2">
                                    <strong>Click to upload</strong> or drag and drop your CSV file here
                                </p>
                                <p class="small text-muted mb-0">
                                    Maximum file size: 10MB | Supported: CSV files only
                                </p>
                            </div>
                            <input type="file" id="bulkFile" name="bulkFile" accept=".csv" class="d-none">
                        </div>
                        
                        <div class="form-text">
                            CSV file should contain TikTok URLs in the first column. 
                            <a href="#" data-bs-toggle="modal" data-bs-target="#csvFormatModal">View format details</a>
                        </div>
                    </div>

                    <div class="d-grid">
                        <button type="button" class="btn btn-success btn-lg" id="uploadBulkBtn" disabled>
                            <i class="fas fa-upload me-2"></i>
                            Start Bulk Download
                        </button>
                    </div>

                    <!-- Bulk Progress -->
                    <div id="bulkProgress" class="mt-4 d-none">
                        <hr>
                        <h6 class="fw-bold">
                            <i class="fas fa-spinner fa-spin me-2"></i>
                            Processing Bulk Download
                        </h6>
                        <div class="progress mb-2">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                 id="progressBar" 
                                 role="progressbar" 
                                 style="width: 0%">
                                0%
                            </div>
                        </div>
                        <div class="row text-center">
                            <div class="col-4">
                                <span class="badge bg-primary" id="totalVideos">0</span>
                                <div class="small text-muted">Total</div>
                            </div>
                            <div class="col-4">
                                <span class="badge bg-success" id="processedVideos">0</span>
                                <div class="small text-muted">Processed</div>
                            </div>
                            <div class="col-4">
                                <span class="badge bg-info" id="successfulVideos">0</span>
                                <div class="small text-muted">Successful</div>
                            </div>
                        </div>
                    </div>

                    <!-- Bulk Results -->
                    <div id="bulkResults" class="mt-4 d-none">
                        <hr>
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h6 class="fw-bold mb-0">
                                <i class="fas fa-check-circle text-success me-2"></i>
                                Bulk Download Complete
                            </h6>
                            <button class="btn btn-sm btn-outline-secondary" id="downloadAllBtn">
                                <i class="fas fa-download me-1"></i>
                                Download All
                            </button>
                        </div>
                        <div id="bulkResultsContainer"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Downloads -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-history me-2"></i>
                            Recent Downloads
                        </h5>
                        <button class="btn btn-sm btn-outline-primary" id="refreshHistoryBtn">
                            <i class="fas fa-sync-alt me-1"></i>
                            Refresh
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div id="recentDownloads">
                        <div class="text-center py-4">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2 text-muted">Loading recent downloads...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Video Details Modal -->
<div class="modal fade" id="downloadVideoDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-video me-2"></i>
                    Video Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="downloadVideoDetailsContent">
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2 text-muted">Loading video details...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Video Preview Modal -->
<div class="modal fade" id="videoPreviewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Video Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-0" id="videoPreviewContent">
                <!-- Video content will be inserted here -->
            </div>
        </div>
    </div>
</div>

<!-- Help Modal -->
<div class="modal fade" id="helpModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-question-circle me-2"></i>
                    How to Use TikTok Downloader
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6 class="fw-bold">
                            <i class="fas fa-video me-2 text-primary"></i>
                            Single Download
                        </h6>
                        <ol>
                            <li>Copy a TikTok video URL</li>
                            <li>Paste it in the URL field</li>
                            <li>Click "Download Video"</li>
                            <li>Choose HD or watermarked version</li>
                        </ol>
                        
                        <h6 class="fw-bold mt-4">
                            <i class="fas fa-link me-2 text-info"></i>
                            Supported URL Formats
                        </h6>
                        <ul class="small">
                            <li>https://www.tiktok.com/@user/video/123</li>
                            <li>https://vm.tiktok.com/abc123</li>
                            <li>https://www.tiktok.com/t/abc123</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold">
                            <i class="fas fa-layer-group me-2 text-success"></i>
                            Bulk Download
                        </h6>
                        <ol>
                            <li>Download CSV template</li>
                            <li>Add TikTok URLs to the template</li>
                            <li>Upload the CSV file</li>
                            <li>Monitor progress in real-time</li>
                            <li>Download processed videos</li>
                        </ol>
                        
                        <div class="alert alert-info mt-3">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Rate Limit:</strong> 2 videos per second to ensure quality processing
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- CSV Format Modal -->
<div class="modal fade" id="csvFormatModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-file-csv me-2"></i>
                    CSV Format Guide
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <h6 class="fw-bold">Required Format:</h6>
                <div class="bg-light p-3 rounded mb-3">
                    <code>
                        url,title,notes<br>
                        https://www.tiktok.com/@user/video/123,Video Title,Optional notes<br>
                        https://www.tiktok.com/@user/video/456,Another Video,More notes
                    </code>
                </div>
                
                <h6 class="fw-bold">Rules:</h6>
                <ul>
                    <li>First column must contain TikTok URLs</li>
                    <li>Header row is required</li>
                    <li>Maximum 100 URLs per file</li>
                    <li>File size limit: 10MB</li>
                    <li>Only CSV format is supported</li>
                </ul>
                
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Invalid URLs will be skipped during processing
                </div>
            </div>
            <div class="modal-footer">
                <a href="/api/download/template" class="btn btn-primary">
                    <i class="fas fa-download me-2"></i>
                    Download Template
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    /**
 * TikTok Downloader Pro - Download Page (MINIMAL/SAFE VERSION)
 * This version focuses on core functionality without complex features
 */

// Global modal variables
let downloadModal = null;
let previewModal = null;

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
    console.log('Download page initializing...');
    
    // Initialize modals
    initModals();
    
    // Initialize download manager
    initDownloadManager();
    
    // Load recent downloads
    loadRecentDownloads();
});

// Initialize modals
function initModals() {
    try {
        const downloadModalEl = document.getElementById('downloadVideoDetailsModal');
        const previewModalEl = document.getElementById('videoPreviewModal');
        
        if (downloadModalEl) {
            downloadModal = new bootstrap.Modal(downloadModalEl);
            console.log('Download modal initialized');
        }
        
        if (previewModalEl) {
            previewModal = new bootstrap.Modal(previewModalEl);
            console.log('Preview modal initialized');
        }
        
    } catch (error) {
        console.error('Modal initialization error:', error);
    }
}

// Initialize download functionality
function initDownloadManager() {
    // Single download form
    const singleForm = document.getElementById('singleDownloadForm');
    if (singleForm) {
        singleForm.addEventListener('submit', handleSingleDownload);
    }
    
    // Paste button
    const pasteBtn = document.getElementById('pasteBtn');
    if (pasteBtn) {
        pasteBtn.addEventListener('click', handlePaste);
    }
    
    // Refresh button
    const refreshBtn = document.getElementById('refreshHistoryBtn');
    if (refreshBtn) {
        refreshBtn.addEventListener('click', loadRecentDownloads);
    }
}

// Handle single download
async function handleSingleDownload(e) {
    e.preventDefault();
    
    const form = e.target;
    const submitBtn = form.querySelector('button[type="submit"]');
    const originalText = submitBtn.innerHTML;
    
    try {
        // Loading state
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Processing...';
        
        // Get form data
        const formData = new FormData(form);
        
        // Make request
        const response = await fetch('/api/download/single', {
            method: 'POST',
            body: formData
        });
        
        const result = await response.json();
        
        if (result.success) {
            showDownloadResult(result.data.video);
            form.reset();
            loadRecentDownloads();
            showToast('Video processed successfully!', 'success');
        } else {
            throw new Error(result.message || 'Download failed');
        }
        
    } catch (error) {
        console.error('Download error:', error);
        showToast('Download failed: ' + error.message, 'error');
        
    } finally {
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalText;
    }
}

// Handle paste from clipboard
async function handlePaste() {
    try {
        const text = await navigator.clipboard.readText();
        const urlInput = document.getElementById('videoUrl');
        if (urlInput) {
            urlInput.value = text;
        }
    } catch (error) {
        console.error('Paste error:', error);
        showToast('Failed to read clipboard', 'error');
    }
}

// Show download result
function showDownloadResult(video) {
    const resultDiv = document.getElementById('singleResult');
    const cardContainer = document.getElementById('singleVideoCard');
    
    if (!resultDiv || !cardContainer) return;
    
    cardContainer.innerHTML = `
        <div class="card">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="${video.thumbnail}" class="img-fluid rounded-start" alt="Video thumbnail">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">${video.title}</h5>
                        <p class="card-text">
                            <small class="text-muted">by ${video.author.name}</small>
                        </p>
                        <div class="btn-group w-100">
                            <a href="${video.downloadUrls.hd}" class="btn btn-primary" download>
                                <i class="fas fa-download"></i> Download HD
                            </a>
                            <a href="${video.downloadUrls.watermark}" class="btn btn-outline-primary" download>
                                <i class="fas fa-download"></i> With Watermark
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    resultDiv.classList.remove('d-none');
}

// Load recent downloads
async function loadRecentDownloads() {
    const container = document.getElementById('recentDownloads');
    if (!container) return;
    
    try {
        // Loading state
        container.innerHTML = `
            <div class="text-center py-4">
                <div class="spinner-border" role="status"></div>
                <p class="mt-2">Loading...</p>
            </div>
        `;
        
        // Make request
        const response = await fetch('/api/download/history?limit=6');
        const result = await response.json();
        
        if (result.success && result.data.history.length > 0) {
            const historyHtml = result.data.history.map(item => {
                const video = item.video;
                const videoId = video.id;
                const title = video.title || 'Untitled Video';
                const thumbnail = video.thumbnail || video.cover_url || 'https://via.placeholder.com/70x70';
                const author = video.author || video.author_name || 'Unknown';
                const duration = video.duration || '00:00';
                
                return `
                    <div class="col-md-6 col-lg-4 mb-3">
                        <div class="card h-100" style="cursor: pointer;" onclick="showVideoDetails(${videoId})">
                            <div class="card-body p-3">
                                <div class="d-flex">
                                    <img src="${thumbnail}" class="rounded me-3" width="60" height="60" alt="Thumbnail">
                                    <div class="flex-grow-1">
                                        <h6 class="card-title mb-1">${title.length > 30 ? title.substring(0, 30) + '...' : title}</h6>
                                        <p class="card-text small text-muted">by ${author}</p>
                                        <small class="text-muted">${duration}</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
            
            container.innerHTML = `<div class="row">${historyHtml}</div>`;
            
        } else {
            container.innerHTML = `
                <div class="text-center py-4">
                    <i class="fas fa-history fa-3x text-muted mb-3"></i>
                    <p class="text-muted">No recent downloads</p>
                </div>
            `;
        }
        
    } catch (error) {
        console.error('Load recent downloads error:', error);
        container.innerHTML = `
            <div class="text-center py-4">
                <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
                <p class="text-muted">Failed to load recent downloads</p>
                <button class="btn btn-outline-primary btn-sm" onclick="loadRecentDownloads()">
                    Try Again
                </button>
            </div>
        `;
    }
}

// Show video details in modal
async function showVideoDetails(videoId) {
    if (!downloadModal) {
        console.error('Download modal not initialized');
        return;
    }
    
    try {
        const modalContent = document.getElementById('downloadVideoDetailsContent');
        if (!modalContent) return;
        
        // Loading state
        modalContent.innerHTML = `
            <div class="text-center py-4">
                <div class="spinner-border" role="status"></div>
                <p class="mt-2">Loading video details...</p>
            </div>
        `;
        
        // Show modal
        downloadModal.show();
        
        // Get video details
        const response = await fetch(`/dashboard/api/video/${videoId}`);
        const result = await response.json();
        
        if (result.success) {
            const video = result.data;
            modalContent.innerHTML = `
                <div class="row">
                    <div class="col-md-4">
                        <img src="${video.thumbnail}" class="img-fluid rounded" alt="Video thumbnail">
                    </div>
                    <div class="col-md-8">
                        <h5>${video.title}</h5>
                        <p class="text-muted">by ${video.author.name}</p>
                        
                        <div class="row mb-3">
                            <div class="col-6">
                                <div class="text-center p-2 bg-light rounded">
                                    <div class="fw-bold">${video.stats.play_count}</div>
                                    <small class="text-muted">Views</small>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="text-center p-2 bg-light rounded">
                                    <div class="fw-bold">${video.stats.digg_count}</div>
                                    <small class="text-muted">Likes</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <a href="${video.downloadUrls.hd}" class="btn btn-primary" download>
                                <i class="fas fa-download"></i> Download HD
                            </a>
                            <a href="${video.downloadUrls.watermark}" class="btn btn-outline-primary" download>
                                <i class="fas fa-download"></i> With Watermark
                            </a>
                        </div>
                    </div>
                </div>
            `;
        } else {
            throw new Error(result.message || 'Failed to load video details');
        }
        
    } catch (error) {
        console.error('Show video details error:', error);
        const modalContent = document.getElementById('downloadVideoDetailsContent');
        if (modalContent) {
            modalContent.innerHTML = `
                <div class="text-center py-4">
                    <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
                    <h6>Failed to Load Details</h6>
                    <p class="text-muted">${error.message}</p>
                </div>
            `;
        }
    }
}

// Simple toast notification
function showToast(message, type = 'info') {
    // Create toast element
    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white bg-${type === 'error' ? 'danger' : type === 'success' ? 'success' : 'info'} border-0`;
    toast.setAttribute('role', 'alert');
    toast.style.position = 'fixed';
    toast.style.top = '20px';
    toast.style.right = '20px';
    toast.style.zIndex = '9999';
    
    toast.innerHTML = `
        <div class="d-flex">
            <div class="toast-body">${message}</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" onclick="this.parentElement.parentElement.remove()"></button>
        </div>
    `;
    
    document.body.appendChild(toast);
    
    // Auto remove after 3 seconds
    setTimeout(() => {
        if (toast.parentElement) {
            toast.remove();
        }
    }, 3000);
}

// Global functions for backward compatibility
window.showDownloadVideoDetails = showVideoDetails;
window.loadRecentDownloads = loadRecentDownloads;
window.showVideoDetails = showVideoDetails;
</script>
